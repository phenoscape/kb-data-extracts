# Search for character states by EQ annotation
PREFIX obo: <http://purl.obolibrary.org/obo/>
PREFIX ps: <http://purl.org/phenoscape/vocab.owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX owlet: <http://purl.org/phenoscape/owlet/syntax#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX StandardState: <http://purl.obolibrary.org/obo/CDAO_0000045>
PREFIX inheres_in: <http://purl.obolibrary.org/obo/BFO_0000052>
PREFIX towards: <http://purl.obolibrary.org/obo/pato#towards>
# Replace the entity URI with the term of interest
PREFIX Entity: <http://purl.obolibrary.org/obo/UBERON_0008897>
PREFIX has_part: <http://purl.obolibrary.org/obo/BFO_0000051>
PREFIX hint: <http://www.bigdata.com/queryHints#>

# This query illustrates using Phenoscape Owlery as a federated SERVICE for an OWL class expression.
SELECT DISTINCT ?state ?state_desc
FROM <http://kb.phenoscape.org/>
WHERE
{
?state rdf:type StandardState: .
?state dc:description ?state_desc .
?state ps:describes_phenotype ?eq .
SERVICE <https://kb.phenoscape.org/owlery/kbs/phenoscape/sparql> {
    ?eq rdfs:subClassOf "(has_part: some (inheres_in: some Entity:)) or (has_part: some (towards: some Entity:)) or (has_part: some (towards: value Entity:))"^^owlet:omn .
}
hint:Prior hint:runFirst true .
}
